from itertools import permutations


def solution(array):
    res = []
    for num in array:
        flag = False
        p = permutations(num)
        for i in p:
            num_str = "". join(i)
            num_int = int(num_str)
            if num_int % 8 == 0:
                res.append('Yes')
                flag = True
                break
        if not flag:
            res.append('No')
    return res


if _name_ == '_main_':
    print(solution(['61', '75']))
    print(solution(['8', '28']))
    print(solution(['41', '2729898085', '36470692']))
    print(solution(['6', '51003309490753470524125270008606806367328593031305727464566556358', '90', '756995491723225162730517', '85',
                    '79469', '19925032577740588113287839777652765270', '73', '2244622737144073751525292683302638291496220820215599210588030', '20', '34']))
    print(solution(['7', '8', '1604744988347761125513191682299161757147083970002856195455984812117842662961981488', '71', '2732538560697761323204495', '65093', '1915311219106721256220190152093874435758860562', '512224636790903079406376167829521965629498598017050', '38513227391588060112183104921111084606', '86706532765985296800913041501379949714991789430011314638800168054226',
                    '14', '20', '31701942278907939097362500335562553649076988871792748', '391548020575414600789572595435554820642', '6045284311329144218575', '24', '44985706370213539740382589254708019781328562917801031401548918019109251219622', '836289880338568587607060470194619', '26', '13', '66825394891690851323437048595845537068477859844979', '62']))
    print(solution(['8', '86', '656411992834780769', '16', '797428283417050169664035301', '291980408812221272653210455978306606766749171310795237202791534316', '43868777129190746666867112574182580480192224310976772496745185534692813255607614584953', '83', '73', '18', '8448486719387376743582010404904250098991820779343623144397709446477366668838892354781310', '82', '66779474231821129045812825048181651718431715857074577769465473851122988251046944391087145', '8507918459233853433898', '50920389229', '55', '89700340094344533824048032524',
                    '2674899409564019369510192517978637237199245848875', '7796743832620192685579958636585267033346528850018868773558319155051', '289590340650638323102631988931438487643620883718048413701624967827783165153747741', '750873417676425329696060907660575764025', '7554628914084603', '70', '406465225674529102995695275874146004547104578799108880439119843445809', '74', '73', '6372102293456569445900412585925055285626161740884687648808591218738511139523514', '78', '69', '6958729040045897120392645284681596368385589160804034210040409658', '1754401212012072517']))
    print(solution(['24', '8853809796999819553081530536664551032923824925883403586532490866171', '79', '370552162603', '620562954930224', '82', '600274557350543599906319644025296435890525790', '57', '48293319951123209667565942167770510853968082502460337851369', '37028205511331782040004901239154067889561694895211231832177093599299145427928469792', '50', '5250143854246603042970559344461796920317951713', '21519694721187358160213119500832896755249389234042284605557551040637371421364969197579224090116', '520213835129280498187624826932455476982494444406414497871486821561269620',
                    '89', '57', '55', '72', '867655913516774092977175630282279055548090887388795414299237666861535357', '75', '83', '23879503715152819890348815450668156008670105588489715726264440357189146159827698761233179', '55761599413340233112990335664615294365328853196637848074740124845491045831', '13905902729315447', '43', '50589939463012263401606952352889737853991202721071351059484964858833134274567876921', '6729568308906457902949537296719191269000912778790986', '51781554784812034047425216204929199466935548741468102653295887818764470', '85']))
